#!/usr/bin/env zsh
# Copyright (c) 2023 Sebastian Gniazdowski
#
# iqsn – IQ Swiss Knife
#

iqsn() {

#
# The only place where code repetition occurs
#

# Set options
builtin emulate -L zsh -o extendedglob -o noshortloops \
                        -o warncreateglobal -o typesetsilent \
                        -o nopromptsubst

# Run as script?
integer BESCRIPT=${${${(M)0:#$ZSH_ARGZERO:t}:+1}:-0};

# Set $0 with a new trik - use of %x prompt expansion
0=${${(M)${0::=${(%):-%x}}:#/*}:-$PWD/$0}
source $0:h:h/share/preamble.inc.zsh --func

#
# End of code repetition
#

local -A Opts; local -a opts
int/iq::parse-opts "z -zsh c -c d -dump v -verbose l q V -vim" Opts opts "$@"
set -- "$reply[@]"
local CMD=$1
(($#&&$#CMD))&&shift||CMD=help

if [[ -s $ZIQDIR/libexec/$CMD ]];then
    autoload -z $ZIQDIR/libexec/$CMD #zsweep:pass
    $CMD "$opts[@]" "$@"
else
    iqmsgi $0:t\:$LINENO {err}Error:{txt} \
        no such subcommand %B{quot}·{cmd}${(U)CMD}{%}%B{quot}·{%},\
            exiting doing nothing…
    return 1
fi

return 0
}

# To support autoloading the script as a function
iqsn "$@"
