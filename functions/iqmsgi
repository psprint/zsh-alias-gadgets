#!/usr/bin/env zsh
# -*- mode: sh;sh-indentation: 4;indent-tabs-mode: nil;sh-basic-offset: 4; -*-
#
# Copyright (c) 2023 Sebastian Gniazdowski
#

iqmsgi() {

SNIP_EMULATE_OPTIONS_ZERO
source $0:h:h/share/preamble.inc.zsh --func

# -h - origin tag
# -p - overwrite quiet mode
# -q - quiet mode
# -e - print to stderr
# -n - no new line
local -A Opts; local -a opts
int/iq::parse-opts "h p q -quiet e n" Opts opts "$@"
set -- "$reply[@]"

# Quiet mode? → no printing if so
(($+Opts[-q]==1&&$+Opts[-p]!=1))&&return

local -a reply
local TMP

iq::read-theme||return 17
typeset -gA ZIQ=("$reply[@]")

# Blue message origin tag?
local funloc=$1 nick=$IQNICK tmp
[[ $funloc == ?*:<-> ]]&&shift||funloc=
[[ -n $nick ]]&&tmp+="%U%B[%b$nick%B]{%}"
[[ -n $funloc ]]&&tmp+="%B{note}[%b{pre}${funloc:t}%B{note}]%b:{%}"

# Output origin tag?
(($+Opts[-h]))&&builtin set -- $tmp "$@"
# Output to stderr?
(($+Opts[-e]))&&local err=-u2
# No new line?
(($+Opts[-n]))&&local n=-n

iqmsg_cmd_helper() {
    [[ $(builtin type -w iq::format-$1) != *:\ none ]]&&print found|tee -a /tmp/reply
}

# Main work function
iqmsg_subst() {
    local pstart=$1 pend=$2 esc=$'\e[' cpstart='{' cpend='}'
    local op='«' cop='{' qc=%${${${(M)pstart#$cpstart}:+F}:-K} tmp tmpb tmpa
    shift 2
    # Format functions
    #${$(print -ru2 match 1:$match[1] 2:$match[2] 3:$match[2] 4:$match[3])+}\
    REPLY="${(j: :)@//(#b)([\\]#)${pstart}([^$pend]##)$pend\
([^$pstart]#~*[\\]##)/\
${${tmp::=$pstart$match[2]$pend}+}\
${${tmpb::=1}+}\
${${tmpa::=${match[1]//(#m)(#s)([\\][\\])#(#e)/\
${$(iqmsg_cmd_helper $match[2]):+\
$(iq::format-"$match[2]" -o "$match[3]")\
${match[3]::=}${tmpb::=}${${match[1]::=${match[1]%[\\]}}+}}}}+}\
$match[1]${tmpa/(#m)(#s)[\\]##(#e)/$tmp${tmpb::=}}\
${tmpb:+$tmp}$match[3]}"
    # ZIQ_ fields
    local e=kufbKUFB
    REPLY="${REPLY//(#b)([\\]#)${pstart}([^$pend]##)$pend\
([^$pstart]#~*[\\]##)/\
${match[1]%[\\]}\
${${tmpb::=$pstart$match[2]$pend}+}\
${${tmp::=${${${${(M)ZIQ[$match[2]]:#\
(#m)($esc|(%[$e])##|)(<->##(m|)|$'\n'|…|)}:+\
${MATCH%%[0-9]##}\
${${(M)MATCH%<->}:+$qc${cpstart}${MATCH##[^0-9]##}${cpend}}}}}}+}\
${${match[1]//(#s)([\\][\\])#(#e)/$tmp}//(#s)(#m)[\\]##(#e)/$tmpb}$match[3]}"
    return 0
}

# Isolate any quoted parts
REPLY=${@[*]//(\{PRE\}(#b)(*)\{\/PRE\})/%%PRE%%}
TMP=$'\x1b[3m'${match[1]}\
$ZIQ[%]
# Substitute foreground {color}
iqmsg_subst '{' '}' "$REPLY"
# Substitute background «color»
iqmsg_subst '«' '»' "$REPLY"

# Substitute $HOME
REPLY=${REPLY//$HOME/~}
# Restore quoted code
REPLY=${REPLY//\%\%PRE\%\%/$TMP}

# Output
#printf %s\\n
local q='\{' qn='{'
builtin print -r $n $err -P -- "${REPLY//$q/$qn}" "%k%f%b%u"

# Mark that iqmsg has run, to use in [[…]]&&iqmsg … cascades
REPLY=1

# vim:ft=zsh:sw=4:sts=4:et

}

iqmsgi "$@"