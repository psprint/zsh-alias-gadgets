#!/usr/bin/env zsh

dump(){
    # Set $0 with a new trik - use of %x prompt expansion
    0=${${(M)${0::=${(%):-%x}}:#/*}:-$PWD/$0}
    source $0:h:h/share/preamble.inc.zsh --func

    local -a opts; local -A Opts
    int/iq::parse-opts "l e n q d -dump c v:" Opts opts "$@"
    set -- "$reply[@]"
    int/iq::opt-cascade Opts --dump -d
    local QNL=/dev/null

    if (($+Opts[-e]));then
        local QED=${VISUAL:-${EDITOR:-${GIT_EDITOR:-mcedit}}}
        type $QED &>$QNL &&$QED $0
        return $?
    fi


    (($+Opts[-d]))&&{
        local QN
        for QN ($@){
            iqmsg {nl}{note}Notice:{%} showing variable {var}$QN{%}:
            int/@iq::str4var $QN
        }
        return $?
    }
    
    local e=${${opts[*]//((#s)|* )-q*}:+-r} \
        n=${(M)opts:#-n} \
        q=${${(M)opts:#-q}:+-r} \
        v=${${(M)opts:#-v}:+-v $Opts[-v]} \
        l=${(M)opts:#-l} \
        c=${${(M)opts:#-c}:+-C1}
    local -a args

    (($+Opts[-l]&&!$+Opts[-c]))&&\
      args=(printf $=v Â·%${${q:+b}:-s}${${n:+" "}:-\\n})||\
      args=(print $c $n ${e#$q} $=v)
        builtin "$args[@]" "$@"
}
