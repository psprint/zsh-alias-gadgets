#!/usr/bin/env zsh
# This function will execute the given code FROM ZLE CONTEXT(!).
#
# It has an optional delay first argument:
# · @sleep:<seconds with fractions>.
#
# If given, then the code will wait in background before being
# executed, for the specified amount of time.
# The limit of the code length is 25 lines and can be easily
# extended by changing the "repeat 25" line
#
# Usage:
# iq::exec-hop-back "echo Hello world"
# iq::exec-hop-back "BUFFER[-1]=''"
# iq::exec-hop-back  @sleep:5.5 "BUFFER='The time has passed, sorry for replacing your command line ;)'"

[[ "$1" = <-> && $# -eq 1 ]] && {
    local alltext text IFS=$'\n' nl=$'\n'
    repeat 25; do read -r -u"$1" text; alltext+="${text:+$text$nl}"; done

    zle -F "$1"; exec {1}<&-
    eval "$alltext"
    return 0
}

local THEFD
exec {THEFD} < <(
    # The expansion is: if there is @sleep:[0-9]… pfx, then use what
    # after it, otherwise substitute 0
    local t=${${(M)1#@sleep:}:+${1#@sleep:}}
    [[ -n $t ]]&&shift
    LANG=C command sleep $((0.005+${t:-0}))
    builtin printf %s\\n "$@"
)

zle -N exec-widget iq::exec-hop-back && \
    zle -w -F "$THEFD" exec-widget || \
        iqwarn couldn\'t set up the recurring code snippet to run \
            (zle error: {int}$?{txt})

# vim;ft=zsh:sts=4:sw=4:et
