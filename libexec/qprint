#!/usr/bin/env zsh

qprint(){
    # Preamble – emulate & 0=…
    eval "${SNIP_EMULATE_OPTIONS_ZERO:-false}"||\
        0=${${(M)${0::=${(%):-%x}}:#/*}:-$PWD/$0}
    source $0:h:h/share/preamble.inc.zsh --fun

    local -a __opts; local -A __Opts
    int/iq::parse-opts "o: 1 e n p q c E" __Opts __opts "$@"||\
         {iqerr incorrect options given to {cmd}qprint{%}; return 7}

    set -- "$reply[@]"
    local QNL=$ZIQNUL
    (($+__Opts[-q]))&&__Opts[-q]=-q
    if ((!$+__Opts[-p]));then
        local __QN
        for __QN ($@){
            iqmsg -Q $__Opts[-q] {nl}{note}Notice:\
                {%}showing variable {var}$__QN{%}:
            int/@iq::str4var $__QN
        }
        return $?
    fi

    local \
        n=${(M)__opts:#-n} \
        E=${${(M)__opts:#-E}:+-r} \
        o=${${(M)__opts:#-o}:+-v $__Opts[-o]} \
        l=${${(M)__opts:#-1}:+-l} \
        c=${${(M)__opts:#-c}:+-C1}
    local -a args

    if (($+__Opts[-1]&&!$+__Opts[-c]));then
      args=(printf $=o ·%${${E:+s}:-b}${${n:+" "}:-\\n})
    else
      args=(print $c $n $E $=o)
    fi
    builtin "$args[@]" "$@"
}

qprint "$@"